#!/usr/bin/env node

/**
 * Script de diagn√≥stico espec√≠fico para servidor de producci√≥n
 */

const nodemailer = require('nodemailer');

async function diagnosticoProduccion() {
    console.log('üîç DIAGN√ìSTICO SERVIDOR DE PRODUCCI√ìN');
    console.log('====================================');
    console.log('');

    // Informaci√≥n del servidor de producci√≥n
    console.log('üìã INFORMACI√ìN DEL SERVIDOR:');
    console.log('============================');
    console.log(`Sistema: ${process.platform} ${process.arch}`);
    console.log(`Node.js: ${process.version}`);
    console.log(`Directorio: ${process.cwd()}`);
    console.log(`Memoria: ${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)} MB`);
    console.log(`Uptime: ${Math.round(process.uptime())} segundos`);
    console.log('');

    // Verificar variables de entorno en producci√≥n
    console.log('üîß VARIABLES DE ENTORNO EN PRODUCCI√ìN:');
    console.log('=====================================');
    console.log(`GMAIL_USER: ${process.env.GMAIL_USER || 'NO CONFIGURADO'}`);
    console.log(`GMAIL_PASS: ${process.env.GMAIL_PASS ? '***CONFIGURADO***' : 'NO CONFIGURADO'}`);
    console.log(`NODE_ENV: ${process.env.NODE_ENV || 'NO CONFIGURADO'}`);
    console.log('');

    // Test espec√≠fico para servidor de producci√≥n
    console.log('üìß TEST ESPEC√çFICO PARA PRODUCCI√ìN:');
    console.log('===================================');
    
    try {
        // Configurar transporter para producci√≥n
        const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.GMAIL_USER || 'hdgomez0@gmail.com',
                pass: process.env.GMAIL_PASS || 'wlstvjdckvhzxwvo'
            },
            tls: {
                rejectUnauthorized: false
            },
            // Configuraciones espec√≠ficas para servidores de producci√≥n
            connectionTimeout: 60000, // 60 segundos
            greetingTimeout: 30000,    // 30 segundos
            socketTimeout: 60000      // 60 segundos
        });

        console.log('üîß Configurando conexi√≥n para producci√≥n...');
        
        // Verificar conexi√≥n
        await transporter.verify();
        console.log('‚úÖ Conexi√≥n Gmail verificada en producci√≥n');
        
        // Enviar correo de prueba
        console.log('üìß Enviando correo de prueba desde producci√≥n...');
        
        const mailOptions = {
            from: `Portal UCI Producci√≥n <${process.env.GMAIL_USER || 'hdgomez0@gmail.com'}>`,
            to: 'hdgomez0@gmail.com',
            subject: 'üîç Test Producci√≥n - Portal UCI',
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                    <h2 style="color: #2c3e50;">üîç Test Producci√≥n - Portal UCI</h2>
                    <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
                        <h3 style="color: #495057; margin-top: 0;">Informaci√≥n del Servidor de Producci√≥n</h3>
                        <p><strong>Fecha:</strong> ${new Date().toLocaleString()}</p>
                        <p><strong>Sistema:</strong> ${process.platform} ${process.arch}</p>
                        <p><strong>Node.js:</strong> ${process.version}</p>
                        <p><strong>Directorio:</strong> ${process.cwd()}</p>
                        <p><strong>Memoria:</strong> ${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)} MB</p>
                        <p><strong>Uptime:</strong> ${Math.round(process.uptime())} segundos</p>
                    </div>
                    <div style="background: #d4edda; padding: 15px; border-radius: 5px; border-left: 4px solid #28a745;">
                        <p style="margin: 0; color: #155724;"><strong>‚úÖ Test de producci√≥n completado</strong></p>
                        <p style="margin: 5px 0 0 0; color: #155724;">El sistema de correos funciona correctamente en producci√≥n.</p>
                    </div>
                </div>
            `
        };

        const info = await transporter.sendMail(mailOptions);
        
        console.log('‚úÖ Correo enviado exitosamente desde producci√≥n');
        console.log(`üìß Message ID: ${info.messageId}`);
        console.log(`üìß Response: ${info.response}`);
        console.log('');
        console.log('üéâ ¬°SISTEMA FUNCIONANDO EN PRODUCCI√ìN!');
        console.log('=====================================');
        console.log('El sistema de correos est√° funcionando correctamente en el servidor de producci√≥n.');
        
    } catch (error) {
        console.log('‚ùå Error en producci√≥n:', error.message);
        console.log('');
        console.log('üîß DIAGN√ìSTICO DEL ERROR:');
        console.log('========================');
        
        if (error.message.includes('ECONNREFUSED')) {
            console.log('üîç CAUSA: El servidor de producci√≥n bloquea SMTP');
            console.log('üí° SOLUCI√ìN: Usar Gmail API (HTTPS)');
            console.log('üí° COMANDO: node scripts/configurar-gmail-api-alternativo.js');
        } else if (error.message.includes('ETIMEDOUT')) {
            console.log('üîç CAUSA: Timeout en servidor de producci√≥n');
            console.log('üí° SOLUCI√ìN: Verificar firewall del servidor');
            console.log('üí° ALTERNATIVA: Usar Gmail API (HTTPS)');
        } else if (error.message.includes('authentication')) {
            console.log('üîç CAUSA: Error de autenticaci√≥n en producci√≥n');
            console.log('üí° SOLUCI√ìN: Verificar variables de entorno');
            console.log('üí° COMANDO: Verificar .env en servidor');
        } else if (error.message.includes('blocked')) {
            console.log('üîç CAUSA: Gmail bloquea conexiones del servidor');
            console.log('üí° SOLUCI√ìN: Usar Gmail API (HTTPS)');
            console.log('üí° COMANDO: node scripts/configurar-gmail-api-alternativo.js');
        } else {
            console.log('üîç CAUSA: Error desconocido en producci√≥n');
            console.log('üí° SOLUCI√ìN: Revisar logs del servidor');
            console.log('üí° ALTERNATIVA: Usar Gmail API (HTTPS)');
        }
        
        console.log('');
        console.log('üöÄ SOLUCIONES RECOMENDADAS:');
        console.log('==========================');
        console.log('1. Si SMTP est√° bloqueado:');
        console.log('   - Ejecutar: node scripts/configurar-gmail-api-alternativo.js');
        console.log('   - Configurar Gmail API con OAuth 2.0');
        console.log('   - Usar HTTPS en lugar de SMTP');
        console.log('');
        console.log('2. Si hay problemas de variables de entorno:');
        console.log('   - Verificar archivo .env en servidor');
        console.log('   - Configurar GMAIL_USER y GMAIL_PASS');
        console.log('   - Reiniciar aplicaci√≥n');
        console.log('');
        console.log('3. Si hay problemas de red:');
        console.log('   - Contactar administrador del servidor');
        console.log('   - Verificar configuraci√≥n de firewall');
        console.log('   - Usar Gmail API (puerto 443)');
    }
}

// Ejecutar diagn√≥stico de producci√≥n
diagnosticoProduccion();